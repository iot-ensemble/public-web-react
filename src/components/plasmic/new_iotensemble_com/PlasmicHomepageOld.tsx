// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aTC3q87SvYM316XzoAz9a2
// Component: Mhwh6njE_0YZW
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: Yh3OL_UqnMDQoH/component
import Button from "../../Button"; // plasmic-import: cDQxsDRfT9gIBv/component
import Section from "../../Section"; // plasmic-import: sdnKnX5vOOj8jX/component
import ValueProp from "../../ValueProp"; // plasmic-import: TgzPqT9E_wfNat/component
import ListItem from "../../ListItem"; // plasmic-import: RZicgXn9AMWCmH/component
import PriceCard from "../../PriceCard"; // plasmic-import: Dm_4qJAK1AxCbj/component
import Banner from "../../Banner"; // plasmic-import: wOD-nHMwc8Vx9X/component
import Testimonial from "../../Testimonial"; // plasmic-import: T4jGAKcf3m1n9_/component
import CallToActionSection from "../../CallToActionSection"; // plasmic-import: ETAOH7p_7mlqGf/component
import FathymFooter from "../../FathymFooter"; // plasmic-import: KWLt0Ypx6GRqq/component

import { useScreenVariants as useScreenVariants_2MnWPdLissBd6Z } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 2mnWPdLissBD6Z/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_new_iotensemble_com.module.css"; // plasmic-import: aTC3q87SvYM316XzoAz9a2/projectcss
import sty from "./PlasmicHomepageOld.module.css"; // plasmic-import: Mhwh6njE_0YZW/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: 3B5pxrnVxk-ZUY/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: vmCK544ZPyk_gQ/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: hDULe3Rv0s35IQ/icon
import CheckCircleIcon from "./icons/PlasmicIcon__CheckCircle"; // plasmic-import: Mr5jMO9wXQg7SA/icon
import imagePVAbN89Vb8Ncj from "./images/image.png"; // plasmic-import: pV-AbN89vb8ncj/picture
import angular4PngFsl8XsjFgAckYl from "./images/angular4Png.png"; // plasmic-import: FSL8XSJFgAckYl/picture
import react3PngOgfAcvWw6Wn7Le from "./images/react3Png.png"; // plasmic-import: OGFAcvWW6Wn7le/picture
import docusaurusjpgMve3USbvRNnwKe from "./images/docusaurusjpg.jpeg"; // plasmic-import: Mve3USbvRNnwKe/picture
import svelte2JpgW2No5Tr41RtgJ from "./images/svelte2Jpg.jpeg"; // plasmic-import: W2NO5Tr_41rtgJ/picture
import vue2JpgUrnOuft3Hs99Pp from "./images/vue2Jpg.jpeg"; // plasmic-import: URNOuft3Hs99PP/picture
import gatsby2PngK1Si6Gd5QQzMlh from "./images/gatsby2Png.png"; // plasmic-import: k1Si6GD5QQzMLH/picture
import shoppingCart2JpgDiXNngvEEmVciu from "./images/shoppingCart2Jpg.jpeg"; // plasmic-import: diXNngvEEmVciu/picture
import iotEnsemblejpgE6P88Ofrno8Wbw from "./images/iotEnsemblejpg.jpeg"; // plasmic-import: E6p88ofrno8wbw/picture
import loomSYsgplQ2XcKWib from "./images/loom.svg"; // plasmic-import: SYsgplQ2xcKWib/picture
import strapiQuaQbSnr1V25SD from "./images/strapi.svg"; // plasmic-import: QUAQbSNR1v25sD/picture
import segmentDrQk7Lwt539Id9 from "./images/segment.svg"; // plasmic-import: drQK7Lwt539id9/picture
import xstateP53SOl4DgZbFPv from "./images/xstate.svg"; // plasmic-import: p53sOl4DgZbFPv/picture
import mapboxJx6CgHAaDpXd2 from "./images/mapbox.svg"; // plasmic-import: Jx6CG_HAaDPXd2/picture
import tracy11HtFfjAOu4A from "./images/tracy.png"; // plasmic-import: 11HT_FFJ_AOu4A/picture
import elaineRaXJr4LW9Pey2X from "./images/elaine.png"; // plasmic-import: RaXJr4lW9pey2X/picture
import louisKrNgq8PjCSvtZ from "./images/louis.jpeg"; // plasmic-import: KRNgq8PJ_cSvtZ/picture
import image95Q21ElMPoHaz9 from "./images/image9.png"; // plasmic-import: 5Q21_ElMPoHaz9/picture

export type PlasmicHomepageOld__VariantMembers = {};

export type PlasmicHomepageOld__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepageOld__VariantsArgs;
export const PlasmicHomepageOld__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepageOld__ArgsType = {};
type ArgPropType = keyof PlasmicHomepageOld__ArgsType;
export const PlasmicHomepageOld__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepageOld__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  valuePropsSection?: p.Flex<typeof Section>;
  checkpointsSection?: p.Flex<typeof Section>;
  pricingSection?: p.Flex<typeof Section>;
  shopBannersSection?: p.Flex<typeof Section>;
  logoCloudSection?: p.Flex<typeof Section>;
  testimonialsSection?: p.Flex<typeof Section>;
  callToActionSection?: p.Flex<typeof CallToActionSection>;
  fathymFooter?: p.Flex<typeof FathymFooter>;
};

export interface DefaultHomepageOldProps {
  className?: string;
}

function PlasmicHomepageOld__RenderFunc(props: {
  variants: PlasmicHomepageOld__VariantsArgs;
  args: PlasmicHomepageOld__ArgsType;
  overrides: PlasmicHomepageOld__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_2MnWPdLissBd6Z()
  });

  return (
    <React.Fragment>
      {}
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__lQvBy)}
            >
              <div className={classNames(projectcss.all, sty.column___7LY4X)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cj52E)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__p5Fqv)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__hy93P)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yIeXd
                        )}
                      >
                        {"BETA!"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x4BIr
                      )}
                    >
                      {"Build, deploy, & scale modern web projects "}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9Bh8Y
                      )}
                    >
                      {"First class support for every popular  framework"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__leQAx)}
                  >
                    <Button
                      className={classNames("__wab_instance", sty.button__q3Eq)}
                      color={"blue" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__xzbgr)}
                          role={"img"}
                        />
                      }
                      link={"/dashboard/create-project" as const}
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___49Ju7
                        )}
                      >
                        {"Get Started for Free"}
                      </div>
                    </Button>

                    <Button
                      bgDifference={true}
                      className={classNames(
                        "__wab_instance",
                        sty.button__axrCb
                      )}
                      link={"/docs" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qHOgE
                        )}
                      >
                        {"Learn more…"}
                      </div>
                    </Button>
                  </p.Stack>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__ltJdQ)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__amb3)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: imagePVAbN89Vb8Ncj,
                    fullWidth: 485,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </p.Stack>

          <Section
            data-plasmic-name={"valuePropsSection"}
            data-plasmic-override={overrides.valuePropsSection}
            className={classNames("__wab_instance", sty.valuePropsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qhzwr)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mhChV)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__nQa7F)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__zGtq9
                    )}
                  >
                    {"Built for Developer Scale"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gHmFi
                  )}
                >
                  {
                    "Frontend development is not meant to be a solo activity.  Seamlessly integrating with GitHub, Fathym makes it a collaborative experience with deploy previews for every code change.   "
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pWzCb)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__lP7Wk)}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xdyX0
                      )}
                    >
                      {
                        "orchestration tools that bring open source to your solutions."
                      }
                    </div>
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__a55Zi)}
                      role={"img"}
                    />
                  }
                  title={"Powerful"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__shwQt)}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nnEOh
                      )}
                    >
                      {
                        "pages for your users, faster time to market for your team."
                      }
                    </div>
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__bcDfc)}
                      role={"img"}
                    />
                  }
                  title={"Faster"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__e8Mlh)}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nwT3B
                      )}
                    >
                      {"for engaging users with modern web projects."}
                    </div>
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__r3B66)}
                      role={"img"}
                    />
                  }
                  title={"Best practices"}
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fEer7)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__cJge4)}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wy5L0
                      )}
                    >
                      {"devops powered by modern devops practices."}
                    </div>
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__aRMtZ)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__osrgg
                      )}
                    >
                      {"Portable"}
                    </div>
                  }
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__fUn9M)}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wTn2T
                      )}
                    >
                      {
                        "make it easier to deliver, test, and iterate on solutions that engage users."
                      }
                    </div>
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__uw5J)}
                      role={"img"}
                    />
                  }
                  title={"Micro-frontends"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__f91Y4)}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sUzzX
                      )}
                    >
                      {
                        "that integrate analytics, A/B testing, engagement and more. "
                      }
                    </div>
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__fHcjp)}
                      role={"img"}
                    />
                  }
                  title={"Application Modifiers"}
                />
              </p.Stack>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"checkpointsSection"}
            data-plasmic-override={overrides.checkpointsSection}
            background={"dark" as const}
            className={classNames("__wab_instance", sty.checkpointsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__dKkHh)}
              id={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("features" as const)
                  : ("features" as const)
              }
            >
              <div className={classNames(projectcss.all, sty.column__tdW6K)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___7IhFx)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zCPeA
                    )}
                  >
                    {"Freedoms"}
                  </div>

                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__r0G7O
                    )}
                  >
                    {"Design to be open"}
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vsJzf
                    )}
                  >
                    {
                      "Build solutions that grow and adapt with the communities you serve.  Empower business owners, web admins, and friends."
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__md8Vl)}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__r2Ly4)}
                        role={"img"}
                      />
                    }
                    flat={true}
                    link={"/docs" as const}
                    showEndIcon={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vUva
                      )}
                    >
                      {"Learn more"}
                    </div>
                  </Button>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__lmQzt)}>
                <div className={classNames(projectcss.all, sty.freeBox__nPEn)}>
                  <ListItem
                    bottomBorder={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("dark" as const)
                        : ("dark" as const)
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__b6GfR
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__vyF00)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h2YXd
                      )}
                    >
                      {"Built in public"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__zcPnk
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg___4FQsv)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__geKpu
                      )}
                    >
                      {"Communities that adapt"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames("__wab_instance", sty.listItem__rrR)}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__eRkBy)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gnfJd
                      )}
                    >
                      {"Open source for the enterprise"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames("__wab_instance", sty.listItem__iyY8)}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__t9X2A)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dic9Z
                      )}
                    >
                      {"Modern web projects"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem___3Dk0C
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__tsAv6)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__n0U7B
                      )}
                    >
                      {"Automated DevOps"}
                    </div>
                  </ListItem>
                </div>
              </div>
            </p.Stack>
          </Section>

          {true ? (
            <Section
              data-plasmic-name={"pricingSection"}
              data-plasmic-override={overrides.pricingSection}
              background={"dark" as const}
              className={classNames("__wab_instance", sty.pricingSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6BBjq)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___6BVq8)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__conlB)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oXj26
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "                  "
                        : "Free During BETA"}
                    </div>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qrUaq
                    )}
                  >
                    {
                      "Start now, scale later.  No vendor lock with open-source technology and Fathym's virtual development team.   \n\nUnlimited sites during beta, lifetime shared hosting for your beta created sites, one custom domain and free SSL."
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__jAfz)}
                    color={"blue" as const}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__xpEam)}
                        role={"img"}
                      />
                    }
                    link={"/dashboard/create-project" as const}
                    showEndIcon={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xyPGk
                      )}
                    >
                      {"Get Started for Free"}
                    </div>
                  </Button>
                </p.Stack>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__ncw4M)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___6PxFi)}
                    >
                      <PriceCard
                        action={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wh1E2
                            )}
                          >
                            {"Get Started Now"}
                          </div>
                        }
                        borders={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? []
                            : ["flatRight"]
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard__lhwjq
                        )}
                        description={
                          <React.Fragment>
                            <ValueProp
                              className={classNames(
                                "__wab_instance",
                                sty.valueProp___94IV
                              )}
                              description={"Unlimited sites during beta"}
                              flatIcon={true}
                              icon={
                                <CheckIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__nH7Xo
                                  )}
                                  role={"img"}
                                />
                              }
                              noTitle={true}
                            />

                            <ValueProp
                              className={classNames(
                                "__wab_instance",
                                sty.valueProp___6Ifyf
                              )}
                              description={"Lifetime Shared Hosting Access"}
                              flatIcon={true}
                              icon={
                                <CheckIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__ryHbN
                                  )}
                                  role={"img"}
                                />
                              }
                              noTitle={true}
                            />

                            <ValueProp
                              className={classNames(
                                "__wab_instance",
                                sty.valueProp__o8IsP
                              )}
                              description={"One custom domain and Free SSL"}
                              flatIcon={true}
                              icon={
                                <CheckIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__cn9Uu
                                  )}
                                  role={"img"}
                                />
                              }
                              noTitle={true}
                            />

                            <ValueProp
                              className={classNames(
                                "__wab_instance",
                                sty.valueProp__j6HN
                              )}
                              description={"Shared Single Sign On"}
                              flatIcon={true}
                              icon={
                                <CheckIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__wjh3Y
                                  )}
                                  role={"img"}
                                />
                              }
                              noTitle={true}
                            />
                          </React.Fragment>
                        }
                        dollars={"0"}
                        label={"BETA"}
                      />
                    </div>

                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__duM5Y
                        )}
                      >
                        <PriceCard
                          action={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__b5Vr1
                              )}
                            >
                              {"Contact Us"}
                            </div>
                          }
                          borders={[]}
                          className={classNames(
                            "__wab_instance",
                            sty.priceCard__agEaQ
                          )}
                          description={
                            <React.Fragment>
                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp___3S7J2
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__tL736
                                    )}
                                  >
                                    {"Everything in Starter, plus"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___98Vmn
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__htJ3J
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___9PYGg
                                    )}
                                  >
                                    {"Team tools"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__qTg3G
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__q1Kxp
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__r3SjV
                                    )}
                                  >
                                    {"Unlimited Custom domains and Free SSL"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___69VtL
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__os7V3
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__waite
                                    )}
                                  >
                                    {"User Authentication and Authorization"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__nVy6D
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__nkd24
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__yq6XY
                                    )}
                                  >
                                    {"Unlimited modifiers and routes"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__xs7Ac
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__nm25W
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__kbxGj
                                    )}
                                  >
                                    {"Custom Single Sign On"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__sjm3O
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />
                            </React.Fragment>
                          }
                          dollars={"100"}
                          label={"PRO"}
                          primary={true}
                        />
                      </div>
                    ) : null}
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__rzDim
                        )}
                      >
                        <PriceCard
                          action={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__bMTp
                              )}
                            >
                              {"Contact Us"}
                            </div>
                          }
                          borders={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? []
                              : ["flatLeft"]
                          }
                          className={classNames(
                            "__wab_instance",
                            sty.priceCard__uTaS
                          )}
                          description={
                            <React.Fragment>
                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__niLgB
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__ryRty
                                    )}
                                  >
                                    {"Managed private, hybrid cloud hosting."}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__zGHf
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__uPlvp
                                )}
                                description={
                                  "Cost control and savings automation"
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__c0Yoh
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__prZEj
                                )}
                                description={"Unlimited team seats"}
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__wAwOs
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />
                            </React.Fragment>
                          }
                          dollars={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__zrvo8
                              )}
                            >
                              {"5,000"}
                            </div>
                          }
                          label={"Enterprise"}
                        />
                      </div>
                    ) : null}
                  </p.Stack>
                ) : null}
              </p.Stack>
            </Section>
          ) : null}

          <Section
            data-plasmic-name={"shopBannersSection"}
            data-plasmic-override={overrides.shopBannersSection}
            className={classNames("__wab_instance", sty.shopBannersSection)}
            size={"fullContentWidth" as const}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__sl1Oh)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__jyQ1J)}
              >
                <Banner
                  className={classNames("__wab_instance", sty.banner__rBoQx)}
                  image={{
                    src: angular4PngFsl8XsjFgAckYl,
                    fullWidth: 225,
                    fullHeight: 225,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bxnoE
                        )}
                      >
                        {"Superheroic JavaScript MVW Framework"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sN2VP
                        )}
                      >
                        {"angular + fathym"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__elnSi
                        )}
                      >
                        {
                          "We get the ball rolling with an Angular + Typescript app that you can run with."
                        }
                      </div>

                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___7Z9Z
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        link={"/angular" as const}
                        showEndIcon={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8J5
                          )}
                        >
                          {"Get Started"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />

                <Banner
                  className={classNames("__wab_instance", sty.banner__qGqKx)}
                  image={{
                    src: react3PngOgfAcvWw6Wn7Le,
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__w9BGo
                        )}
                      >
                        {"A JS library for building user interfaces"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dBNjp
                        )}
                      >
                        {"react + fathym"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cUowN
                        )}
                      >
                        {
                          "Save the pain and suffering and create your interactive UI's in minutes!"
                        }
                      </div>

                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gK0S8
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        link={"/react" as const}
                        showEndIcon={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xiR3E
                          )}
                        >
                          {"Get Started"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__aZjxv)}
              >
                <Banner
                  className={classNames("__wab_instance", sty.banner___41K5)}
                  image={{
                    src: docusaurusjpgMve3USbvRNnwKe,
                    fullWidth: 300,
                    fullHeight: 255,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__t6IHv
                        )}
                      >
                        {"Build optimized websites quickly"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sN2VP
                        )}
                      >
                        {"docusaurus + fathym"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__elnSi
                        )}
                      >
                        {
                          "Easy website? Check.\nEasy docs? Check.\nEasy blogs? Check."
                        }
                      </div>

                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jmv8U
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        link={"/docusaurus" as const}
                        showEndIcon={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yoE7C
                          )}
                        >
                          {"Get Started"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />

                <Banner
                  className={classNames("__wab_instance", sty.banner__vPz1T)}
                  image={{
                    src: svelte2JpgW2No5Tr41RtgJ,
                    fullWidth: 1200,
                    fullHeight: 1445,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__awO2T
                        )}
                      >
                        {"Cybernetically enhanced web apps"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dBNjp
                        )}
                      >
                        {"svelte + fathym"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cUowN
                        )}
                      >
                        {
                          "Good, clean  true low-code feels like crushed velvet.  Wrap yourself in it."
                        }
                      </div>

                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___34Tz3
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        link={"/svelte-deployment" as const}
                        showEndIcon={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yBw2
                          )}
                        >
                          {"Get Started"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vwTly)}
              >
                <Banner
                  className={classNames("__wab_instance", sty.banner__gy54)}
                  image={{
                    src: vue2JpgUrnOuft3Hs99Pp,
                    fullWidth: 400,
                    fullHeight: 366,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__siQ2R
                        )}
                      >
                        {"The Progressive JavaScript Framework"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sN2VP
                        )}
                      >
                        {"vue + fathym"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__elnSi
                        )}
                      >
                        {
                          "An approachable, performant and versatile framework for building web UIs."
                        }
                      </div>

                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__j1Dt
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        link={"/vue" as const}
                        showEndIcon={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___1Eh9P
                          )}
                        >
                          {"Get Started"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />

                <Banner
                  className={classNames("__wab_instance", sty.banner__jBhFt)}
                  image={{
                    src: gatsby2PngK1Si6Gd5QQzMlh,
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qdXzk
                        )}
                      >
                        {"Frontend Framework for Headless CMS's"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dBNjp
                        )}
                      >
                        {"gatsby + fathym"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cUowN
                        )}
                      >
                        {
                          "Maybe it's time your CMS had a faster frontend. For reals."
                        }
                      </div>

                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__dps1B
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        link={"/gatsby" as const}
                        showEndIcon={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oqFIv
                          )}
                        >
                          {"Get Started"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />
              </p.Stack>

              <Banner
                className={classNames("__wab_instance", sty.banner__nIy49)}
                image={{
                  src: shoppingCart2JpgDiXNngvEEmVciu,
                  fullWidth: 1131,
                  fullHeight: 800,
                  aspectRatio: undefined
                }}
                left={
                  <React.Fragment>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8UGrz
                      )}
                    >
                      {"ecommerce in the Wild"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__j0GnU
                      )}
                    >
                      {"forestry + 11ty + snipcart + fathym"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rVxsW
                      )}
                    >
                      {
                        "The reality is, there are 100s of different combinations of technology that can be used to achieve an e-Commerce store. This one gets you started with the click of a button. Make it yours today!"
                      }
                    </div>

                    <Button
                      color={"link" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__zgdYr)}
                          role={"img"}
                        />
                      }
                      flat={true}
                      link={
                        "https://www.fathym.com/docs/guides/deploying/e-commerce/overview" as const
                      }
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ktRSh
                        )}
                      >
                        {"Get Started"}
                      </div>
                    </Button>
                  </React.Fragment>
                }
              />

              <Banner
                className={classNames("__wab_instance", sty.banner__ut23W)}
                image={{
                  src: iotEnsemblejpgE6P88Ofrno8Wbw,
                  fullWidth: 669,
                  fullHeight: 440,
                  aspectRatio: undefined
                }}
                left={
                  <React.Fragment>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7TXAj
                      )}
                    >
                      {"data as an Application"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__j0GnU
                      )}
                    >
                      {"iot ensemble + power bi + fathym"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rVxsW
                      )}
                    >
                      {
                        "IoT Ensemble provides out of the box APIs that allow you to easily connect your device data with Microsoft's Power BI. IoT Ensemble + Fathym goes above and beyond to operate as your virtual development team to automate best practices for IoT application delivery."
                      }
                    </div>

                    <Button
                      color={"link" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__s3Eh)}
                          role={"img"}
                        />
                      }
                      flat={true}
                      link={
                        "https://www.fathym.com/iot/docs/devs/storage/power-bi" as const
                      }
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ox7EV
                        )}
                      >
                        {"Get Started"}
                      </div>
                    </Button>
                  </React.Fragment>
                }
              />
            </p.Stack>
          </Section>

          {true ? (
            <Section
              data-plasmic-name={"logoCloudSection"}
              data-plasmic-override={overrides.logoCloudSection}
              className={classNames("__wab_instance", sty.logoCloudSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__eh66U)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__akGmo)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: loomSYsgplQ2XcKWib,
                    fullWidth: 300,
                    fullHeight: 91,
                    aspectRatio: 3.303226
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__xOnpr)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: strapiQuaQbSnr1V25SD,
                    fullWidth: 300,
                    fullHeight: 78,
                    aspectRatio: 3.849624
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hzxMi)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: segmentDrQk7Lwt539Id9,
                    fullWidth: 300,
                    fullHeight: 62,
                    aspectRatio: 4.87619
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__vukCj)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: xstateP53SOl4DgZbFPv,
                    fullWidth: 300,
                    fullHeight: 94,
                    aspectRatio: 3.2
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__gZPfa)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: mapboxJx6CgHAaDpXd2,
                    fullWidth: 300,
                    fullHeight: 67,
                    aspectRatio: 4.491228
                  }}
                />
              </p.Stack>
            </Section>
          ) : null}
          {true ? (
            <Section
              data-plasmic-name={"testimonialsSection"}
              data-plasmic-override={overrides.testimonialsSection}
              background={"gray" as const}
              className={classNames("__wab_instance", sty.testimonialsSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__dzC4K)}
              >
                <div className={classNames(projectcss.all, sty.column__thp2O)}>
                  <Testimonial
                    className={classNames(
                      "__wab_instance",
                      sty.testimonial__xL3Lq
                    )}
                    image={{
                      src: tracy11HtFfjAOu4A,
                      fullWidth: 500,
                      fullHeight: 500,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__uFq5B)}>
                  <Testimonial
                    className={classNames(
                      "__wab_instance",
                      sty.testimonial___6Hrqm
                    )}
                    image={{
                      src: elaineRaXJr4LW9Pey2X,
                      fullWidth: 460,
                      fullHeight: 280,
                      aspectRatio: undefined
                    }}
                    name={"Elaine Benes"}
                    quote={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oGuEn
                          )}
                        >
                          {'"Vestibulum lacinia varius habitant dis aenean.'}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yHTlW
                          )}
                        >
                          {
                            'A parturient non ultricies a parturient leo a nascetur at consectetur turpis praesent mus ornare nulla posuere vel parturient."'
                          }
                        </div>
                      </React.Fragment>
                    }
                    title={"Editor, Pendant Publishing"}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__oxMdn)}>
                  <Testimonial
                    className={classNames(
                      "__wab_instance",
                      sty.testimonial__f3Jj
                    )}
                    image={{
                      src: louisKrNgq8PjCSvtZ,
                      fullWidth: 2249,
                      fullHeight: 3000,
                      aspectRatio: undefined
                    }}
                    name={"Louis Huang"}
                    quote={
                      '"Purus dis a primis rhoncus blandit velit suspendisse porta at ullamcorper suscipit a scelerisque sed pharetra facilisi vitae."'
                    }
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nnRkr
                        )}
                      >
                        {"Restaurant Owner, Cattleman's Ranch"}
                      </div>
                    }
                  />
                </div>
              </p.Stack>
            </Section>
          ) : null}

          <CallToActionSection
            data-plasmic-name={"callToActionSection"}
            data-plasmic-override={overrides.callToActionSection}
            className={classNames("__wab_instance", sty.callToActionSection)}
            image={{
              src: image95Q21ElMPoHaz9,
              fullWidth: 1200,
              fullHeight: 470,
              aspectRatio: undefined
            }}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__cuWh0)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vq7Re
                )}
              >
                {"Welcome"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___7Yzg0
                )}
              >
                {"Let's get started"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2PaNu
                )}
              >
                {
                  "Start building your next open-source project that engages your users."
                }
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__q7QsW)}
            >
              <Button
                className={classNames("__wab_instance", sty.button___4XzSl)}
                color={"blue" as const}
                endIcon={
                  <ChevronRightIcon
                    className={classNames(projectcss.all, sty.svg__lqL0Y)}
                    role={"img"}
                  />
                }
                link={"/dashboard/create-project" as const}
                showEndIcon={true}
              >
                {"Get Started for Free"}
              </Button>

              <Button
                bgDifference={true}
                className={classNames("__wab_instance", sty.button___3759Q)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__usW2
                  )}
                >
                  {"Learn more…"}
                </div>
              </Button>
            </p.Stack>
          </CallToActionSection>

          <FathymFooter
            data-plasmic-name={"fathymFooter"}
            data-plasmic-override={overrides.fathymFooter}
            className={classNames("__wab_instance", sty.fathymFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "valuePropsSection",
    "checkpointsSection",
    "pricingSection",
    "shopBannersSection",
    "logoCloudSection",
    "testimonialsSection",
    "callToActionSection",
    "fathymFooter"
  ],
  headerHeroSection: ["headerHeroSection", "navbar"],
  navbar: ["navbar"],
  valuePropsSection: ["valuePropsSection"],
  checkpointsSection: ["checkpointsSection"],
  pricingSection: ["pricingSection"],
  shopBannersSection: ["shopBannersSection"],
  logoCloudSection: ["logoCloudSection"],
  testimonialsSection: ["testimonialsSection"],
  callToActionSection: ["callToActionSection"],
  fathymFooter: ["fathymFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  navbar: typeof Navbar;
  valuePropsSection: typeof Section;
  checkpointsSection: typeof Section;
  pricingSection: typeof Section;
  shopBannersSection: typeof Section;
  logoCloudSection: typeof Section;
  testimonialsSection: typeof Section;
  callToActionSection: typeof CallToActionSection;
  fathymFooter: typeof FathymFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepageOld__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepageOld__VariantsArgs;
    args?: PlasmicHomepageOld__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepageOld__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepageOld__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepageOld__ArgProps,
          internalVariantPropNames: PlasmicHomepageOld__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepageOld__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepageOld";
  } else {
    func.displayName = `PlasmicHomepageOld.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepageOld = Object.assign(
  // Top-level PlasmicHomepageOld renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    checkpointsSection: makeNodeComponent("checkpointsSection"),
    pricingSection: makeNodeComponent("pricingSection"),
    shopBannersSection: makeNodeComponent("shopBannersSection"),
    logoCloudSection: makeNodeComponent("logoCloudSection"),
    testimonialsSection: makeNodeComponent("testimonialsSection"),
    callToActionSection: makeNodeComponent("callToActionSection"),
    fathymFooter: makeNodeComponent("fathymFooter"),

    // Metadata about props expected for PlasmicHomepageOld
    internalVariantProps: PlasmicHomepageOld__VariantProps,
    internalArgProps: PlasmicHomepageOld__ArgProps
  }
);

export default PlasmicHomepageOld;
/* prettier-ignore-end */
