// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aTC3q87SvYM316XzoAz9a2
// Component: xB9fdsaMfPKj5N
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: Yh3OL_UqnMDQoH/component
import YouTube from "@plasmicpkgs/react-youtube"; // plasmic-import: CHO21V9uYw/codeComponent
import Button from "../../Button"; // plasmic-import: cDQxsDRfT9gIBv/component
import Section from "../../Section"; // plasmic-import: sdnKnX5vOOj8jX/component
import ValueProp from "../../ValueProp"; // plasmic-import: TgzPqT9E_wfNat/component
import Banner from "../../Banner"; // plasmic-import: wOD-nHMwc8Vx9X/component
import PriceCard from "../../PriceCard"; // plasmic-import: Dm_4qJAK1AxCbj/component
import FathymFooter from "../../FathymFooter"; // plasmic-import: KWLt0Ypx6GRqq/component

import { useScreenVariants as useScreenVariants_2MnWPdLissBd6Z } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 2mnWPdLissBD6Z/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_new_iotensemble_com.module.css"; // plasmic-import: aTC3q87SvYM316XzoAz9a2/projectcss
import sty from "./PlasmicLandingPagesAngular.module.css"; // plasmic-import: xB9fdsaMfPKj5N/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: 3B5pxrnVxk-ZUY/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: hDULe3Rv0s35IQ/icon
import HammerIcon from "./icons/PlasmicIcon__Hammer"; // plasmic-import: qrqCHWq7Cs5_QA/icon
import TargetIcon from "./icons/PlasmicIcon__Target"; // plasmic-import: XTkp8IcnsrPIhU/icon
import FastIcon from "./icons/PlasmicIcon__Fast"; // plasmic-import: z9lFrPVzngCt3_/icon
import StrongIcon from "./icons/PlasmicIcon__Strong"; // plasmic-import: TITdVVbg6DA9uE/icon

export type PlasmicLandingPagesAngular__VariantMembers = {};

export type PlasmicLandingPagesAngular__VariantsArgs = {};
type VariantPropType = keyof PlasmicLandingPagesAngular__VariantsArgs;
export const PlasmicLandingPagesAngular__VariantProps =
  new Array<VariantPropType>();

export type PlasmicLandingPagesAngular__ArgsType = {};
type ArgPropType = keyof PlasmicLandingPagesAngular__ArgsType;
export const PlasmicLandingPagesAngular__ArgProps = new Array<ArgPropType>();

export type PlasmicLandingPagesAngular__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  foreground?: p.Flex<"div">;
  youTube?: p.Flex<typeof YouTube>;
  foreground2?: p.Flex<"div">;
  valuePropsSection?: p.Flex<typeof Section>;
  react?: p.Flex<"a">;
  vue?: p.Flex<"a">;
  svelte?: p.Flex<"a">;
  banner?: p.Flex<typeof Banner>;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  fathymFooter?: p.Flex<typeof FathymFooter>;
};

export interface DefaultLandingPagesAngularProps {
  className?: string;
}

function PlasmicLandingPagesAngular__RenderFunc(props: {
  variants: PlasmicLandingPagesAngular__VariantsArgs;
  args: PlasmicLandingPagesAngular__ArgsType;
  overrides: PlasmicLandingPagesAngular__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_2MnWPdLissBd6Z()
  });

  return (
    <React.Fragment>
      {}
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jGs5Z)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ps4RV
                  )}
                >
                  {"Angular Deployments\nwith Fathym"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__e33V
                  )}
                >
                  {
                    "Create, build, and deploy your next Angular app with Fathym"
                  }
                </div>
              </p.Stack>

              <YouTube
                data-plasmic-name={"youTube"}
                data-plasmic-override={overrides.youTube}
                className={classNames("__wab_instance", sty.youTube)}
                videoId={"FEWQr9RQ1Us" as const}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground2"}
                data-plasmic-override={overrides.foreground2}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground2)}
              >
                <div
                  className={classNames(projectcss.all, sty.columns___3Azv4)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__fnq5S)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__m4GcQ
                      )}
                      color={"blue" as const}
                      link={"/dashboard/create-project/recipe/angular" as const}
                    >
                      {"Get Started for Free"}
                    </Button>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__kpwYq)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__sPuW
                      )}
                      href={
                        "/docs/guides/deploying/frameworks/angular" as const
                      }
                    >
                      {"Learn more >"}
                    </a>
                  </div>
                </div>
              </p.Stack>

              <Section
                data-plasmic-name={"valuePropsSection"}
                data-plasmic-override={overrides.valuePropsSection}
                className={classNames("__wab_instance", sty.valuePropsSection)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__saV9D)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dpNh1)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__ahTUr
                      )}
                    >
                      {"See how Angular Compares"}
                    </h2>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__woVpg
                    )}
                  >
                    {
                      "Looking for the right framework for your next JAMStack example, tutorial or project?  Deploy Angular alongside any number of additional frameworks, get a feel for the development experience, and see how they perform.  Deploy your Angular app free with Fathym's micro frontend framework."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kO3Mc)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nuOoY)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__dlb9E
                      )}
                      description={
                        <React.Fragment>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tvJ7V
                            )}
                          >
                            {
                              "React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components."
                            }
                          </div>

                          <a
                            data-plasmic-name={"react"}
                            data-plasmic-override={overrides.react}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.react
                            )}
                            href={"https://www.fathym.com/react/" as const}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___55WFh
                              )}
                            >
                              {"React Deployments >"}
                            </div>
                          </a>

                          {true ? (
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__orvOt
                              )}
                              link={"/react" as const}
                            >
                              {null}
                            </Button>
                          ) : null}
                        </React.Fragment>
                      }
                      flatIcon={true}
                      icon={
                        <CheckIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___8JeyF
                          )}
                          role={"img"}
                        />
                      }
                      title={"Angular vs React"}
                    />

                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__jeAwo
                      )}
                      description={
                        <React.Fragment>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kCbUy
                            )}
                          >
                            {
                              "The progressive javascript framework.  Already know HTML, CSS and JavaScript? Read the guide and start deploying VueJS apps in no time!               \n"
                            }
                          </div>

                          <a
                            data-plasmic-name={"vue"}
                            data-plasmic-override={overrides.vue}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.vue
                            )}
                            href={"https://www.fathym.com/vue/" as const}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___2InBy
                              )}
                            >
                              {"Vue Deployments >"}
                            </div>
                          </a>

                          {true ? (
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__jc7Vf
                              )}
                              link={"/vue" as const}
                            >
                              {null}
                            </Button>
                          ) : null}
                        </React.Fragment>
                      }
                      flatIcon={true}
                      icon={
                        <CheckIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___9BQ34
                          )}
                          role={"img"}
                        />
                      }
                      title={"Angular vs VueJS"}
                    />

                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__dodz
                      )}
                      description={
                        <React.Fragment>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tuUc5
                            )}
                          >
                            {
                              "Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app."
                            }
                          </div>

                          <a
                            data-plasmic-name={"svelte"}
                            data-plasmic-override={overrides.svelte}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.svelte
                            )}
                            href={
                              "https://www.fathym.com/svelte-deployment/" as const
                            }
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__sOugM
                              )}
                            >
                              {"Svelte Deployments >"}
                            </div>
                          </a>

                          {true ? (
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__tcixz
                              )}
                              link={"/svelte-deployment" as const}
                            >
                              {null}
                            </Button>
                          ) : null}
                        </React.Fragment>
                      }
                      flatIcon={true}
                      icon={
                        <CheckIcon
                          className={classNames(projectcss.all, sty.svg__jNkFr)}
                          role={"img"}
                        />
                      }
                      title={"Angular vs Svelte"}
                    />
                  </p.Stack>
                </p.Stack>
              </Section>

              <Banner
                data-plasmic-name={"banner"}
                data-plasmic-override={overrides.banner}
                className={classNames("__wab_instance", sty.banner)}
                left={
                  <React.Fragment>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kQxQz
                      )}
                    >
                      {"Angular Example Tutorial"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__p2NTv
                      )}
                    >
                      {"Do it Yourself"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ciVwm
                      )}
                    >
                      {
                        "Get started now and deploy your Angular app to production following the simple deployment guide. Have your Angular micro frontend hosted on your domain in minutes."
                      }
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.columns__eNf1S)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___8URFu
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__rpyxN
                          )}
                          color={"blue" as const}
                          link={
                            "/dashboard/create-project/recipe/angular" as const
                          }
                        >
                          {"Get Started for Free"}
                        </Button>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__rdhWw
                        )}
                      >
                        <a
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__xKbY
                          )}
                          href={
                            "/docs/guides/deploying/frameworks/angular" as const
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uNsew
                            )}
                          >
                            {"Read Documentation >"}
                          </div>
                        </a>

                        {true ? (
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__eaY1V
                            )}
                            link={
                              "/docs/guides/deploying/frameworks/angular" as const
                            }
                          >
                            {null}
                          </Button>
                        ) : null}
                      </div>
                    </div>
                  </React.Fragment>
                }
              />
            </p.Stack>
          ) : null}

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__izr8Q)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__rijls)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__p0BYg
                    )}
                  >
                    {"Why deploy Angular?"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jUsX
                  )}
                >
                  {
                    "The modern web developers platform.\n\nLearn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. For web, mobile web, native mobile and native desktop.\n\nAchieve the maximum speed possible on the Web Platform today, and take it further, via Web Workers and server-side rendering.\n\nAngular puts you in control over scalability. Meet huge data requirements by building data models on RxJS, Immutable.js or another push-model.\n\nBuild features quickly with simple, declarative templates. Extend the template language with your own components and use a wide array of existing components. Get immediate Angular-specific help and feedback with nearly every IDE and editor. All this comes together so you can focus on building amazing apps rather than trying to make the code work."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wOvuR)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__xMyfv)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__zeXMi)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__eWXi
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qVXs1
                            )}
                          >
                            {
                              "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                            }
                          </div>
                        }
                        icon={
                          <HammerIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wUGb
                            )}
                            role={"img"}
                          />
                        }
                        title={"Harder"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__kgwJl)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__jsc4Y
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kwn7
                            )}
                          >
                            {
                              "Consequat scelerisque a eros taciti nisl a sodales."
                            }
                          </div>
                        }
                        icon={
                          <TargetIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__tiDqa
                            )}
                            role={"img"}
                          />
                        }
                        title={"Better"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__pIf7E)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__xMh90
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__t3W05
                            )}
                          >
                            {
                              "Varius ad malesuada ullamcorper cursus scelerisque a a."
                            }
                          </div>
                        }
                        icon={
                          <FastIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__vAOb2
                            )}
                            role={"img"}
                          />
                        }
                        title={"Faster"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__gmQy7)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__tf4J
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bsEeV
                            )}
                          >
                            {
                              "Ut eu nam nostra taciti congue adipiscing curabitur."
                            }
                          </div>
                        }
                        icon={
                          <StrongIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yxqB
                            )}
                            role={"img"}
                          />
                        }
                        title={"Stronger"}
                        vertical={true}
                      />
                    </div>
                  </p.Stack>
                ) : null}
              </p.Stack>

              <div className={classNames(projectcss.all, sty.columns__nBedB)}>
                <div className={classNames(projectcss.all, sty.column__wq9Lr)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kdz4Z)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__hk4Bd
                      )}
                      color={"blue" as const}
                      link={"/dashboard/create-project/recipe/angular" as const}
                    >
                      {"Get Started for Free"}
                    </Button>

                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___8GxsS
                      )}
                      href={
                        "/docs/guides/deploying/frameworks/angular" as const
                      }
                    >
                      {"Learn more >"}
                    </a>
                  </div>
                </div>

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.column___1Z07H)}
                  />
                ) : null}
              </div>
            </p.Stack>
          </section>

          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__fdzgl)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oSoEa)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ln75A)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jxfEw)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lijFu
                      )}
                    >
                      {"Pricing plans"}
                    </div>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cUzNu
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__lVwB5)}
                >
                  <PriceCard
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__js8Pv
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__iwdLn
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ro2Sm
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__gnokw
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__m3Onm
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"0"}
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__usK1G
                        )}
                      >
                        {"Buy Pro"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__aKo84
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__tkiaC
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__o84ZA
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__ei9F8
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__pSwA
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__dTtgk
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__i4K8H
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"8"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qeU92
                        )}
                      >
                        {"Pro"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hdzof
                        )}
                      >
                        {"Buy Team"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__pvsYl
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__gpQf2
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__uxaUy
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__gs9On
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__soNWv
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__bwxTo
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sSLeG
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__qaKSn
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vobIi
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"16"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dMvRq
                        )}
                      >
                        {"Team"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sUmCy
                        )}
                      >
                        {"Contact us"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__zfShH
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__qLsEo
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__z1ONy
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__tmobF
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ghQuB
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__aoQ61
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__f5IwL
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___5VoB
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__fTkLk
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"?"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___90Uj7
                        )}
                      >
                        {"Enterprise"}
                      </div>
                    }
                    primary={true}
                  />
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <FathymFooter
            data-plasmic-name={"fathymFooter"}
            data-plasmic-override={overrides.fathymFooter}
            className={classNames("__wab_instance", sty.fathymFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "foreground",
    "youTube",
    "foreground2",
    "valuePropsSection",
    "react",
    "vue",
    "svelte",
    "banner",
    "section",
    "foreground3",
    "fathymFooter"
  ],
  navbar: ["navbar"],
  foreground: ["foreground"],
  youTube: ["youTube"],
  foreground2: ["foreground2"],
  valuePropsSection: ["valuePropsSection", "react", "vue", "svelte"],
  react: ["react"],
  vue: ["vue"],
  svelte: ["svelte"],
  banner: ["banner"],
  section: ["section", "foreground3"],
  foreground3: ["foreground3"],
  fathymFooter: ["fathymFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  foreground: "div";
  youTube: typeof YouTube;
  foreground2: "div";
  valuePropsSection: typeof Section;
  react: "a";
  vue: "a";
  svelte: "a";
  banner: typeof Banner;
  section: "section";
  foreground3: "div";
  fathymFooter: typeof FathymFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLandingPagesAngular__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLandingPagesAngular__VariantsArgs;
    args?: PlasmicLandingPagesAngular__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLandingPagesAngular__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLandingPagesAngular__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicLandingPagesAngular__ArgProps,
          internalVariantPropNames: PlasmicLandingPagesAngular__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicLandingPagesAngular__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLandingPagesAngular";
  } else {
    func.displayName = `PlasmicLandingPagesAngular.${nodeName}`;
  }
  return func;
}

export const PlasmicLandingPagesAngular = Object.assign(
  // Top-level PlasmicLandingPagesAngular renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    foreground: makeNodeComponent("foreground"),
    youTube: makeNodeComponent("youTube"),
    foreground2: makeNodeComponent("foreground2"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    react: makeNodeComponent("react"),
    vue: makeNodeComponent("vue"),
    svelte: makeNodeComponent("svelte"),
    banner: makeNodeComponent("banner"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    fathymFooter: makeNodeComponent("fathymFooter"),

    // Metadata about props expected for PlasmicLandingPagesAngular
    internalVariantProps: PlasmicLandingPagesAngular__VariantProps,
    internalArgProps: PlasmicLandingPagesAngular__ArgProps
  }
);

export default PlasmicLandingPagesAngular;
/* prettier-ignore-end */
