// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aTC3q87SvYM316XzoAz9a2
// Component: HFgbIH1TlGDqnl
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: Yh3OL_UqnMDQoH/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal"; // plasmic-import: R6s1FdhksG/codeComponent
import YouTube from "@plasmicpkgs/react-youtube"; // plasmic-import: CHO21V9uYw/codeComponent
import Button from "../../Button"; // plasmic-import: cDQxsDRfT9gIBv/component
import Section from "../../Section"; // plasmic-import: sdnKnX5vOOj8jX/component
import ValueProp from "../../ValueProp"; // plasmic-import: TgzPqT9E_wfNat/component
import Banner from "../../Banner"; // plasmic-import: wOD-nHMwc8Vx9X/component
import PriceCard from "../../PriceCard"; // plasmic-import: Dm_4qJAK1AxCbj/component
import FathymFooter from "../../FathymFooter"; // plasmic-import: KWLt0Ypx6GRqq/component

import { useScreenVariants as useScreenVariants_2MnWPdLissBd6Z } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 2mnWPdLissBD6Z/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_new_iotensemble_com.module.css"; // plasmic-import: aTC3q87SvYM316XzoAz9a2/projectcss
import sty from "./PlasmicLandingPagesGatsby2Test.module.css"; // plasmic-import: HFgbIH1TlGDqnl/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: 3B5pxrnVxk-ZUY/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: hDULe3Rv0s35IQ/icon
import HammerIcon from "./icons/PlasmicIcon__Hammer"; // plasmic-import: qrqCHWq7Cs5_QA/icon
import TargetIcon from "./icons/PlasmicIcon__Target"; // plasmic-import: XTkp8IcnsrPIhU/icon
import FastIcon from "./icons/PlasmicIcon__Fast"; // plasmic-import: z9lFrPVzngCt3_/icon
import StrongIcon from "./icons/PlasmicIcon__Strong"; // plasmic-import: TITdVVbg6DA9uE/icon

export type PlasmicLandingPagesGatsby2Test__VariantMembers = {};

export type PlasmicLandingPagesGatsby2Test__VariantsArgs = {};
type VariantPropType = keyof PlasmicLandingPagesGatsby2Test__VariantsArgs;
export const PlasmicLandingPagesGatsby2Test__VariantProps =
  new Array<VariantPropType>();

export type PlasmicLandingPagesGatsby2Test__ArgsType = {};
type ArgPropType = keyof PlasmicLandingPagesGatsby2Test__ArgsType;
export const PlasmicLandingPagesGatsby2Test__ArgProps =
  new Array<ArgPropType>();

export type PlasmicLandingPagesGatsby2Test__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  foreground?: p.Flex<"div">;
  youTube?: p.Flex<typeof YouTube>;
  foreground2?: p.Flex<"div">;
  valuePropsSection?: p.Flex<typeof Section>;
  banner?: p.Flex<typeof Banner>;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  fathymFooter?: p.Flex<typeof FathymFooter>;
};

export interface DefaultLandingPagesGatsby2TestProps {
  className?: string;
}

function PlasmicLandingPagesGatsby2Test__RenderFunc(props: {
  variants: PlasmicLandingPagesGatsby2Test__VariantsArgs;
  args: PlasmicLandingPagesGatsby2Test__ArgsType;
  overrides: PlasmicLandingPagesGatsby2Test__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_2MnWPdLissBd6Z()
  });

  return (
    <React.Fragment>
      {}
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__e5Xkr)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <Reveal
                className={classNames("__wab_instance", sty.reveal__rAb6W)}
                triggerOnce={false}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wjZz
                  )}
                >
                  {"Gatsby Deployments\nwith Fathym"}
                </div>
              </Reveal>

              <Reveal
                className={classNames("__wab_instance", sty.reveal__rHt3K)}
                triggerOnce={false}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dmg3M
                  )}
                >
                  {
                    "Create, build, and deploy your next JAMStack app with Gatsby on Fathym"
                  }
                </div>
              </Reveal>
            </p.Stack>

            <Reveal
              className={classNames("__wab_instance", sty.reveal__kyiUl)}
              effect={"bounce" as const}
              triggerOnce={false}
            >
              <YouTube
                data-plasmic-name={"youTube"}
                data-plasmic-override={overrides.youTube}
                className={classNames("__wab_instance", sty.youTube)}
                videoId={"pfgJFR12jKs" as const}
              />
            </Reveal>

            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <div className={classNames(projectcss.all, sty.columns__kfn3C)}>
                <div className={classNames(projectcss.all, sty.column__jLYvP)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__pYrR)}
                    color={"blue" as const}
                    link={"/dashboard/create-project/recipe/gatsby" as const}
                  >
                    {"Get Started for Free"}
                  </Button>
                </div>

                <div className={classNames(projectcss.all, sty.column__gaozV)}>
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__ftqEn
                    )}
                    href={
                      "/docs/guides/deploying/site-builders/gatsby" as const
                    }
                  >
                    {"Learn more >"}
                  </a>
                </div>
              </div>
            </p.Stack>

            <Reveal
              className={classNames("__wab_instance", sty.reveal___3Mez5)}
              direction={"down" as const}
              triggerOnce={true}
            >
              {true ? (
                <Section
                  data-plasmic-name={"valuePropsSection"}
                  data-plasmic-override={overrides.valuePropsSection}
                  className={classNames(
                    "__wab_instance",
                    sty.valuePropsSection
                  )}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___6Vtyt)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__lacJ)}
                    >
                      <Reveal
                        className={classNames(
                          "__wab_instance",
                          sty.reveal___5XDf1
                        )}
                        direction={"down" as const}
                        triggerOnce={false}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__rBiFp
                          )}
                        >
                          {"See how Gatsby Compares"}
                        </h2>
                      </Reveal>
                    </div>

                    <Reveal
                      className={classNames(
                        "__wab_instance",
                        sty.reveal__hnLsw
                      )}
                      direction={"down" as const}
                      triggerOnce={false}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9Sl2R
                        )}
                      >
                        {
                          "Looking for the right framework for your next JAMStack example, tutorial or project?  Deploy Gatsby alongside any number of additional frameworks, get a feel for the development experience, and see how they perform.  Host your Gatsby app free with Fathym's micro frontend framework."
                        }
                      </div>
                    </Reveal>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__kO3Mc)}
                  >
                    {true ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__nuOoY
                        )}
                      >
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__vqDr
                          )}
                          description={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uqIfq
                                )}
                              >
                                {
                                  "Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. Deploy your Angular app now."
                                }
                              </div>

                              <Button link={"/angular" as const}>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___7X15
                                  )}
                                >
                                  {"Angular Deployments >"}
                                </div>
                              </Button>
                            </React.Fragment>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__w3XR6
                              )}
                              role={"img"}
                            />
                          }
                          title={"React vs Angular"}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__hyfcT
                          )}
                          description={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__s49Vi
                                )}
                              >
                                {
                                  "The progressive javascript framework.  Already know HTML, CSS and JavaScript? Read the guide and start deploying VueJS apps in no time!               \n"
                                }
                              </div>

                              <Button link={"/vue" as const}>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__qzjk1
                                  )}
                                >
                                  {"Vue Deployments >"}
                                </div>
                              </Button>
                            </React.Fragment>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___02Oe
                              )}
                              role={"img"}
                            />
                          }
                          title={"React vs VueJS"}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__fJrM3
                          )}
                          description={
                            <React.Fragment>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___9EFyd
                                )}
                              >
                                {
                                  "Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app."
                                }
                              </div>

                              <Button link={"/svelte-deployment" as const}>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__y2Jx
                                  )}
                                >
                                  {"Svelte Deployments >"}
                                </div>
                              </Button>
                            </React.Fragment>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__xUrau
                              )}
                              role={"img"}
                            />
                          }
                          title={"React vs Svelte"}
                        />
                      </p.Stack>
                    ) : null}
                  </p.Stack>
                </Section>
              ) : null}
            </Reveal>

            <Banner
              data-plasmic-name={"banner"}
              data-plasmic-override={overrides.banner}
              className={classNames("__wab_instance", sty.banner)}
              left={
                <React.Fragment>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vQ1Q6
                    )}
                  >
                    {"Gatsby Example Tutorial"}
                  </div>

                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__g64Jx)}
                    direction={"right" as const}
                    triggerOnce={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wEUeJ
                      )}
                    >
                      {"Do it Yourself"}
                    </div>
                  </Reveal>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ciVwm
                    )}
                  >
                    {
                      "Get started now and deploy your Gatsby app to production following the simple deployment guide. Have your Gatsby micro frontend hosted on your domain in minutes."
                    }
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.columns__jGQr)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__fEaxU)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__fnaus
                        )}
                        color={"blue" as const}
                        link={
                          "/dashboard/create-project/recipe/gatsby" as const
                        }
                      >
                        {"Get Started for Free"}
                      </Button>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__zypuv)}
                    >
                      {true ? (
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__fiJp
                          )}
                          link={
                            "/docs/guides/deploying/site-builders/gatsby" as const
                          }
                        >
                          {null}
                        </Button>
                      ) : null}

                      <a
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__x9Af
                        )}
                        href={
                          "/docs/guides/deploying/site-builders/gatsby" as const
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__atVt6
                          )}
                        >
                          {"Read Documentation >"}
                        </div>
                      </a>
                    </div>
                  </div>
                </React.Fragment>
              }
            />
          </p.Stack>

          {true ? (
            <section
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              className={classNames(projectcss.all, sty.section)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground3"}
                data-plasmic-override={overrides.foreground3}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground3)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ihgWn)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hJiJy)}
                  >
                    <Reveal
                      className={classNames(
                        "__wab_instance",
                        sty.reveal__hiOoU
                      )}
                      direction={"right" as const}
                      triggerOnce={true}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__wdZ2N
                        )}
                      >
                        {"Why deploy Gatsby?"}
                      </h2>
                    </Reveal>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7IqNd
                    )}
                  >
                    {
                      "Gatsby is the fast and flexible framework that makes building websites with any CMS, API, or database fun again. Build and deploy headless websites that drive more traffic, convert better, and earn more revenue!\n\nA full-stack frontend framework that comes with everything you need out of the box."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qoruV)}
                >
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns__yZt2F)}
                    >
                      <div
                        className={classNames(projectcss.all, sty.column__p1Me)}
                      >
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__hZnt0
                          )}
                          darkBackground={true}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fr5Y2
                              )}
                            >
                              {
                                "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                              }
                            </div>
                          }
                          icon={
                            <HammerIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cinNi
                              )}
                              role={"img"}
                            />
                          }
                          title={"Harder"}
                          vertical={true}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__vW0Pe
                        )}
                      >
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__rnqam
                          )}
                          darkBackground={true}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__p7Vys
                              )}
                            >
                              {
                                "Consequat scelerisque a eros taciti nisl a sodales."
                              }
                            </div>
                          }
                          icon={
                            <TargetIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dxrig
                              )}
                              role={"img"}
                            />
                          }
                          title={"Better"}
                          vertical={true}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__dkVdi
                        )}
                      >
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__zomdy
                          )}
                          darkBackground={true}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__cJ
                              )}
                            >
                              {
                                "Varius ad malesuada ullamcorper cursus scelerisque a a."
                              }
                            </div>
                          }
                          icon={
                            <FastIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___8U2XL
                              )}
                              role={"img"}
                            />
                          }
                          title={"Faster"}
                          vertical={true}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__l3UbK
                        )}
                      >
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___1JMco
                          )}
                          darkBackground={true}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wq5AH
                              )}
                            >
                              {
                                "Ut eu nam nostra taciti congue adipiscing curabitur."
                              }
                            </div>
                          }
                          icon={
                            <StrongIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sLqlb
                              )}
                              role={"img"}
                            />
                          }
                          title={"Stronger"}
                          vertical={true}
                        />
                      </div>
                    </p.Stack>
                  ) : null}
                </p.Stack>

                <div className={classNames(projectcss.all, sty.freeBox__nRzJg)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__jg7G4)}
                    color={"blue" as const}
                    link={"/dashboard/create-project/recipe/gatsby" as const}
                  >
                    {"Get Started for Free"}
                  </Button>

                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___2Fo1
                    )}
                    href={
                      "/docs/guides/deploying/site-builders/gatsby" as const
                    }
                  >
                    {"Learn more >"}
                  </a>
                </div>

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.columns__tCcQ)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__ebBzb)}
                    />

                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__eeLNq
                        )}
                      />
                    ) : null}
                  </div>
                ) : null}
              </p.Stack>
            </section>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__xjoZ3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ha7Ss)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___8GBpa)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gsqG0)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__w7KmK
                      )}
                    >
                      {"Pricing plans"}
                    </div>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__e7C80
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__e31Kw)}
                >
                  <PriceCard
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__hs7Fw
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__ikOia
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__iSzb8
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__muGj5
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___2Towa
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"0"}
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__liYe3
                        )}
                      >
                        {"Buy Pro"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__ra3Bl
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__cWr6A
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__owN2D
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__yuEoS
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__y5K6E
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__x6Xux
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___2A8Vx
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"8"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yfcWz
                        )}
                      >
                        {"Pro"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8DNp5
                        )}
                      >
                        {"Buy Team"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__dRbXb
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__lbdW5
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__jjJiw
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__vd8AV
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__tzDki
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__bXfxm
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___9TLnH
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__ipej
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ppyYb
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"16"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__f5Wp
                        )}
                      >
                        {"Team"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yzFn
                        )}
                      >
                        {"Contact us"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__i76P
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__xuigk
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__k6TXo
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__xo6Lk
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___2H2G
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__kx9Lm
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ivjLi
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___0EluE
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__e2Zub
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"?"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qdmO
                        )}
                      >
                        {"Enterprise"}
                      </div>
                    }
                    primary={true}
                  />
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <FathymFooter
            data-plasmic-name={"fathymFooter"}
            data-plasmic-override={overrides.fathymFooter}
            className={classNames("__wab_instance", sty.fathymFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "foreground",
    "youTube",
    "foreground2",
    "valuePropsSection",
    "banner",
    "section",
    "foreground3",
    "fathymFooter"
  ],
  navbar: ["navbar"],
  foreground: ["foreground"],
  youTube: ["youTube"],
  foreground2: ["foreground2"],
  valuePropsSection: ["valuePropsSection"],
  banner: ["banner"],
  section: ["section", "foreground3"],
  foreground3: ["foreground3"],
  fathymFooter: ["fathymFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  foreground: "div";
  youTube: typeof YouTube;
  foreground2: "div";
  valuePropsSection: typeof Section;
  banner: typeof Banner;
  section: "section";
  foreground3: "div";
  fathymFooter: typeof FathymFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLandingPagesGatsby2Test__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLandingPagesGatsby2Test__VariantsArgs;
    args?: PlasmicLandingPagesGatsby2Test__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLandingPagesGatsby2Test__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLandingPagesGatsby2Test__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicLandingPagesGatsby2Test__ArgProps,
          internalVariantPropNames: PlasmicLandingPagesGatsby2Test__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicLandingPagesGatsby2Test__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLandingPagesGatsby2Test";
  } else {
    func.displayName = `PlasmicLandingPagesGatsby2Test.${nodeName}`;
  }
  return func;
}

export const PlasmicLandingPagesGatsby2Test = Object.assign(
  // Top-level PlasmicLandingPagesGatsby2Test renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    foreground: makeNodeComponent("foreground"),
    youTube: makeNodeComponent("youTube"),
    foreground2: makeNodeComponent("foreground2"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    banner: makeNodeComponent("banner"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    fathymFooter: makeNodeComponent("fathymFooter"),

    // Metadata about props expected for PlasmicLandingPagesGatsby2Test
    internalVariantProps: PlasmicLandingPagesGatsby2Test__VariantProps,
    internalArgProps: PlasmicLandingPagesGatsby2Test__ArgProps
  }
);

export default PlasmicLandingPagesGatsby2Test;
/* prettier-ignore-end */
