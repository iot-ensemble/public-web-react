// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aTC3q87SvYM316XzoAz9a2
// Component: _kHfDEU-UWaNNn
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: Yh3OL_UqnMDQoH/component
import YouTube from "@plasmicpkgs/react-youtube"; // plasmic-import: CHO21V9uYw/codeComponent
import Button from "../../Button"; // plasmic-import: cDQxsDRfT9gIBv/component
import Section from "../../Section"; // plasmic-import: sdnKnX5vOOj8jX/component
import ValueProp from "../../ValueProp"; // plasmic-import: TgzPqT9E_wfNat/component
import Banner from "../../Banner"; // plasmic-import: wOD-nHMwc8Vx9X/component
import PriceCard from "../../PriceCard"; // plasmic-import: Dm_4qJAK1AxCbj/component
import FathymFooter from "../../FathymFooter"; // plasmic-import: KWLt0Ypx6GRqq/component

import { useScreenVariants as useScreenVariants_2MnWPdLissBd6Z } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 2mnWPdLissBD6Z/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_new_iotensemble_com.module.css"; // plasmic-import: aTC3q87SvYM316XzoAz9a2/projectcss
import sty from "./PlasmicLandingPagesSvelte.module.css"; // plasmic-import: _kHfDEU-UWaNNn/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: 3B5pxrnVxk-ZUY/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: hDULe3Rv0s35IQ/icon
import HammerIcon from "./icons/PlasmicIcon__Hammer"; // plasmic-import: qrqCHWq7Cs5_QA/icon
import TargetIcon from "./icons/PlasmicIcon__Target"; // plasmic-import: XTkp8IcnsrPIhU/icon
import FastIcon from "./icons/PlasmicIcon__Fast"; // plasmic-import: z9lFrPVzngCt3_/icon
import StrongIcon from "./icons/PlasmicIcon__Strong"; // plasmic-import: TITdVVbg6DA9uE/icon

export type PlasmicLandingPagesSvelte__VariantMembers = {};

export type PlasmicLandingPagesSvelte__VariantsArgs = {};
type VariantPropType = keyof PlasmicLandingPagesSvelte__VariantsArgs;
export const PlasmicLandingPagesSvelte__VariantProps =
  new Array<VariantPropType>();

export type PlasmicLandingPagesSvelte__ArgsType = {};
type ArgPropType = keyof PlasmicLandingPagesSvelte__ArgsType;
export const PlasmicLandingPagesSvelte__ArgProps = new Array<ArgPropType>();

export type PlasmicLandingPagesSvelte__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  foreground?: p.Flex<"div">;
  youTube?: p.Flex<typeof YouTube>;
  foreground2?: p.Flex<"div">;
  valuePropsSection?: p.Flex<typeof Section>;
  banner?: p.Flex<typeof Banner>;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  fathymFooter?: p.Flex<typeof FathymFooter>;
};

export interface DefaultLandingPagesSvelteProps {
  className?: string;
}

function PlasmicLandingPagesSvelte__RenderFunc(props: {
  variants: PlasmicLandingPagesSvelte__VariantsArgs;
  args: PlasmicLandingPagesSvelte__ArgsType;
  overrides: PlasmicLandingPagesSvelte__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_2MnWPdLissBd6Z()
  });

  return (
    <React.Fragment>
      {}
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__f2LAj)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__otYoD
                )}
              >
                {"Svelte Deployments\nwith Fathym"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uiPhN
                )}
              >
                {"Create, build, and deploy your next Svelte app with Fathym"}
              </div>
            </p.Stack>

            <YouTube
              data-plasmic-name={"youTube"}
              data-plasmic-override={overrides.youTube}
              className={classNames("__wab_instance", sty.youTube)}
              videoId={"gOo_lTcJo7Y" as const}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <div className={classNames(projectcss.all, sty.columns__mzOj)}>
                <div className={classNames(projectcss.all, sty.column__rGuj5)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__hTgW6)}
                    color={"blue" as const}
                    link={"/dashboard/create-project/recipe/svelte" as const}
                  >
                    {"Get Started for Free"}
                  </Button>
                </div>

                <div className={classNames(projectcss.all, sty.column__y91WK)}>
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__mVj3P
                    )}
                    href={"/docs/guides/deploying/frameworks/svelte" as const}
                  >
                    {"Learn more >"}
                  </a>
                </div>
              </div>
            </p.Stack>

            <Section
              data-plasmic-name={"valuePropsSection"}
              data-plasmic-override={overrides.valuePropsSection}
              className={classNames("__wab_instance", sty.valuePropsSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cUfmK)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__fEzKl)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___223Zp
                    )}
                  >
                    {"See how Svelte Compares"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__k83F
                  )}
                >
                  {
                    "Looking for the right framework for your next Jamstack example, tutorial or project?  Deploy Svelte alongside any number of additional frameworks, get a feel for the development experience, and see how they perform.  Deploy your Svelte app free with Fathym's micro frontend framework."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kO3Mc)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__nuOoY)}
                >
                  <ValueProp
                    className={classNames(
                      "__wab_instance",
                      sty.valueProp___4CGbc
                    )}
                    description={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8JAhv
                          )}
                        >
                          {
                            "React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components."
                          }
                        </div>

                        <a
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__tzCcK
                          )}
                          href={"/react" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mglrP
                            )}
                          >
                            {"React Deployments >"}
                          </div>
                        </a>

                        {true ? (
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__orvOt
                            )}
                            link={"/react" as const}
                          >
                            {null}
                          </Button>
                        ) : null}
                      </React.Fragment>
                    }
                    flatIcon={true}
                    icon={
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg___6EUcv)}
                        role={"img"}
                      />
                    }
                    title={"Svelte vs React"}
                  />

                  <ValueProp
                    className={classNames(
                      "__wab_instance",
                      sty.valueProp___3DXgL
                    )}
                    description={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ltBY
                          )}
                        >
                          {
                            "The progressive javascript framework.  Already know HTML, CSS and JavaScript? Read the guide and start deploying VueJS apps in no time!               \n"
                          }
                        </div>

                        <a
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__bywyd
                          )}
                          href={"/vue" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___759G8
                            )}
                          >
                            {"Vue Deployments >"}
                          </div>
                        </a>

                        {true ? (
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__jc7Vf
                            )}
                            link={"/vue" as const}
                          >
                            {null}
                          </Button>
                        ) : null}
                      </React.Fragment>
                    }
                    flatIcon={true}
                    icon={
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__qbmBc)}
                        role={"img"}
                      />
                    }
                    title={"Svelte vs VueJS"}
                  />

                  <ValueProp
                    className={classNames(
                      "__wab_instance",
                      sty.valueProp__puLeT
                    )}
                    description={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___0JTF
                          )}
                        >
                          {
                            "Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. Deploy your Angular app now."
                          }
                        </div>

                        <a
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link___1Pczu
                          )}
                          href={"/angular" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vVgMu
                            )}
                          >
                            {"Angular Deployments >"}
                          </div>
                        </a>

                        {true ? (
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__tcixz
                            )}
                            link={"/angular" as const}
                          >
                            {null}
                          </Button>
                        ) : null}
                      </React.Fragment>
                    }
                    flatIcon={true}
                    icon={
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__mLcCb)}
                        role={"img"}
                      />
                    }
                    title={"Svelte vs Angular"}
                  />
                </p.Stack>
              </p.Stack>
            </Section>

            <Banner
              data-plasmic-name={"banner"}
              data-plasmic-override={overrides.banner}
              className={classNames("__wab_instance", sty.banner)}
              left={
                <React.Fragment>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sxx1K
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Svelte Example Tutorial"
                      : "svelte Example Tutorial"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p2NTv
                    )}
                  >
                    {"Do it Yourself"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ciVwm
                    )}
                  >
                    {
                      "Get started now and deploy your Svelte app to production following the simple deployment guide. Have your Svelte micro frontend hosted on your domain in minutes."
                    }
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.columns__lu3Pu)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___1EOxr)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__lJaSx
                        )}
                        color={"blue" as const}
                        link={
                          "/dashboard/create-project/recipe/svelte" as const
                        }
                      >
                        {"Get Started for Free"}
                      </Button>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__hWyXc)}
                    >
                      <a
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link___2MNx7
                        )}
                        href={
                          "/docs/guides/deploying/frameworks/svelte" as const
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7Pb1F
                          )}
                        >
                          {"Read Documentation >"}
                        </div>
                      </a>

                      {true ? (
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__nwcjh
                          )}
                          link={
                            "/docs/guides/deploying/frameworks/svelte" as const
                          }
                        >
                          {null}
                        </Button>
                      ) : null}
                    </div>
                  </div>
                </React.Fragment>
              }
            />
          </p.Stack>

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hwC05)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__laXg6)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__pt38K
                    )}
                  >
                    {"Why deploy Svelte?"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hmcIj
                  )}
                >
                  {
                    "Svelte is a radical new approach to building user interfaces. Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app.\n\nInstead of using techniques like virtual DOM diffing, Svelte writes code that surgically updates the DOM when the state of your app changes."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3TxMi)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__xLqOq)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__b7Lck)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___0Fb9
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aeRAe
                            )}
                          >
                            {
                              "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                            }
                          </div>
                        }
                        icon={
                          <HammerIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lU2XC
                            )}
                            role={"img"}
                          />
                        }
                        title={"Harder"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__aExZa)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___0DUwG
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___44NGw
                            )}
                          >
                            {
                              "Consequat scelerisque a eros taciti nisl a sodales."
                            }
                          </div>
                        }
                        icon={
                          <TargetIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__dkl6G
                            )}
                            role={"img"}
                          />
                        }
                        title={"Better"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__cQWz)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__woclM
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aiHgN
                            )}
                          >
                            {
                              "Varius ad malesuada ullamcorper cursus scelerisque a a."
                            }
                          </div>
                        }
                        icon={
                          <FastIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__f5Pg7
                            )}
                            role={"img"}
                          />
                        }
                        title={"Faster"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__fxDq)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___88Lov
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gv3Vr
                            )}
                          >
                            {
                              "Ut eu nam nostra taciti congue adipiscing curabitur."
                            }
                          </div>
                        }
                        icon={
                          <StrongIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__koA7X
                            )}
                            role={"img"}
                          />
                        }
                        title={"Stronger"}
                        vertical={true}
                      />
                    </div>
                  </p.Stack>
                ) : null}
              </p.Stack>

              <div className={classNames(projectcss.all, sty.freeBox__gDlj1)}>
                <Button
                  className={classNames("__wab_instance", sty.button__bxFw1)}
                  color={"blue" as const}
                  link={"/dashboard/create-project/recipe/svelte" as const}
                >
                  {"Get Started for Free"}
                </Button>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link___1HFwR
                  )}
                  href={"/docs/guides/deploying/frameworks/svelte" as const}
                >
                  {"Learn more >"}
                </a>
              </div>

              {true ? (
                <div className={classNames(projectcss.all, sty.columns__cfqih)}>
                  <div
                    className={classNames(projectcss.all, sty.column___1Pc0F)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.column__zqxZu)}
                  />
                </div>
              ) : null}
            </p.Stack>
          </section>

          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ayWxa)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__x8Aw0)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__v1Hh)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gy0DE)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tr1Gh
                      )}
                    >
                      {"Pricing plans"}
                    </div>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v0W6Z
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__w3EuS)}
                >
                  <PriceCard
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__gHVk9
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__xjMx0
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___6LqGk
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___1W8Nz
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___8WjLc
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"0"}
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gTvrb
                        )}
                      >
                        {"Buy Pro"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__fgEq9
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__e8PXe
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ffPh
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__a5Gpi
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gBcd2
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__yXoom
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__qVvBz
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"8"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1Xaal
                        )}
                      >
                        {"Pro"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__huc8O
                        )}
                      >
                        {"Buy Team"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__jKkmC
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__vufJm
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gW36I
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__lQylr
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__l6CnA
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__pBnk9
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__x41KX
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__ov97W
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__f6Hn1
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"16"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gWrx
                        )}
                      >
                        {"Team"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1OiW7
                        )}
                      >
                        {"Contact us"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__rgEFl
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___2Zax3
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cyXyx
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__k63La
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___66S7G
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__vtMyj
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__blnXu
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__gBhak
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__jQL7
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"?"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mjYbJ
                        )}
                      >
                        {"Enterprise"}
                      </div>
                    }
                    primary={true}
                  />
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <FathymFooter
            data-plasmic-name={"fathymFooter"}
            data-plasmic-override={overrides.fathymFooter}
            className={classNames("__wab_instance", sty.fathymFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "foreground",
    "youTube",
    "foreground2",
    "valuePropsSection",
    "banner",
    "section",
    "foreground3",
    "fathymFooter"
  ],
  navbar: ["navbar"],
  foreground: ["foreground"],
  youTube: ["youTube"],
  foreground2: ["foreground2"],
  valuePropsSection: ["valuePropsSection"],
  banner: ["banner"],
  section: ["section", "foreground3"],
  foreground3: ["foreground3"],
  fathymFooter: ["fathymFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  foreground: "div";
  youTube: typeof YouTube;
  foreground2: "div";
  valuePropsSection: typeof Section;
  banner: typeof Banner;
  section: "section";
  foreground3: "div";
  fathymFooter: typeof FathymFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLandingPagesSvelte__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLandingPagesSvelte__VariantsArgs;
    args?: PlasmicLandingPagesSvelte__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLandingPagesSvelte__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLandingPagesSvelte__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicLandingPagesSvelte__ArgProps,
          internalVariantPropNames: PlasmicLandingPagesSvelte__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicLandingPagesSvelte__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLandingPagesSvelte";
  } else {
    func.displayName = `PlasmicLandingPagesSvelte.${nodeName}`;
  }
  return func;
}

export const PlasmicLandingPagesSvelte = Object.assign(
  // Top-level PlasmicLandingPagesSvelte renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    foreground: makeNodeComponent("foreground"),
    youTube: makeNodeComponent("youTube"),
    foreground2: makeNodeComponent("foreground2"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    banner: makeNodeComponent("banner"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    fathymFooter: makeNodeComponent("fathymFooter"),

    // Metadata about props expected for PlasmicLandingPagesSvelte
    internalVariantProps: PlasmicLandingPagesSvelte__VariantProps,
    internalArgProps: PlasmicLandingPagesSvelte__ArgProps
  }
);

export default PlasmicLandingPagesSvelte;
/* prettier-ignore-end */
